const {GraphQLUpload} = require('graphql-upload')
const typeDefs = `
scalar Upload
type Query{
    info:String!
    users:[User!]!
    usersByProfession(profession:String!): [User!]!
    user(id:ID!):User!
    herds:[Herd]!
    cowsByHerd(herdId:ID!): [Cow!]!
    cowsWithoutHerd:[Cow!]!
}
type Mutation{
    herd(image:Upload!,location:String!,cows:[ID!]!,catterys:[ID!]!): Herd!
    cow(height:Float!,weight:Float!,heal:Int!,herd: ID!,images: [Upload!]!,device: String,localisation:String!): Cow!
    resetPassword(newPassword:String!,email:String!):User!
    sendingCode(id:ID!): String!
    updateUser(id:ID!,field:String!,value:String!): User!
    deleteUser(id:ID!): User!
    signIn(phone:String,password:String!):AuthPayload!
    signUp(name:String!,email:String!,phone:String!,profession:String!,localisation:String!,nativeCountry:String!,residentCountry:String!,others:String!,password:String!):AuthPayload!
}
type AuthPayload{
    user: User!
    token:String!
}
type User{
    id: ID!
    name: String!
    email: String!
    phone:String!
    profession:String!
    localisation: String!
    nativeCountry:String!
    residentCountry:String!
    others:String
    status:Boolean!
    reset_password_token:String
    password:String!
    herd: Herd

}
type Cow{
    id:ID!
    height: Float!
    weight: Float!
    heal: Int!
    herd: Herd
    images: [String!]!
    device: String
    status: Boolean!
    location: String!
    myId: String!
}
type Herd{
    id:ID!
    image: String!
    location:String!
    cows: [Cow!]!
    status: Boolean!
    catterys: [User!]!
}
`

module.exports={
    typeDefs
}